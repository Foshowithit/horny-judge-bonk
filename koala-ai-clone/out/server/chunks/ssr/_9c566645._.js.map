{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/project/koala-ai-clone/src/app/ClientBody.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClientBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClientBody() from the server but ClientBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ClientBody.tsx <module evaluation>\",\n    \"ClientBody\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wDACA","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///home/project/koala-ai-clone/src/app/ClientBody.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClientBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClientBody() from the server but ClientBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ClientBody.tsx\",\n    \"ClientBody\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,oCACA","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///home/project/koala-ai-clone/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport \"./globals.css\";\nimport { ClientBody } from \"./ClientBody\";\n\nexport const metadata: Metadata = {\n  title: \"GET BONK'D | $BONKD\",\n  description: \"GET BONK'D - Not financial advice. Just bonks.\",\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head>\n        <link rel=\"preload\" as=\"image\" href=\"/images/bonk-pfp.png\" />\n        <link rel=\"preload\" as=\"image\" href=\"/images/bonk-main-meme.png\" />\n        <link rel=\"preload\" as=\"image\" href=\"/images/bonk-dog.png\" />\n        <link rel=\"preload\" as=\"image\" href=\"/images/bonk-meme.png\" />\n        <meta name=\"image-suppression\" content=\"no\" />\n        <meta httpEquiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n        <meta httpEquiv=\"Pragma\" content=\"no-cache\" />\n        <meta httpEquiv=\"Expires\" content=\"0\" />\n      </head>\n      <body>\n        <ClientBody>{children}</ClientBody>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,gMAAC;QAAK,MAAK;QAAK,wBAAwB;;0BACtC,gMAAC;;kCACC,gMAAC;wBAAK,KAAI;wBAAU,IAAG;wBAAQ,MAAK;;;;;;kCACpC,gMAAC;wBAAK,KAAI;wBAAU,IAAG;wBAAQ,MAAK;;;;;;kCACpC,gMAAC;wBAAK,KAAI;wBAAU,IAAG;wBAAQ,MAAK;;;;;;kCACpC,gMAAC;wBAAK,KAAI;wBAAU,IAAG;wBAAQ,MAAK;;;;;;kCACpC,gMAAC;wBAAK,MAAK;wBAAoB,SAAQ;;;;;;kCACvC,gMAAC;wBAAK,WAAU;wBAAgB,SAAQ;;;;;;kCACxC,gMAAC;wBAAK,WAAU;wBAAS,SAAQ;;;;;;kCACjC,gMAAC;wBAAK,WAAU;wBAAU,SAAQ;;;;;;;;;;;;0BAEpC,gMAAC;0BACC,cAAA,gMAAC,yHAAA,CAAA,aAAU;8BAAE;;;;;;;;;;;;;;;;;AAIrB","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/project/koala-ai-clone/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/project/koala-ai-clone/node_modules/same-runtime/dist/jsx-dev-runtime.js"],"sourcesContent":["import { jsxDEV as jsxDEV$1 } from 'react/jsx-dev-runtime';\nexport * from 'react/jsx-dev-runtime';\nexport { Fragment } from 'react/jsx-dev-runtime';\n\n// src/jsx-dev-runtime.ts\nvar jsxDEV = (type, originalProps, key, isStatic, source, self) => {\n  let props = originalProps;\n  try {\n    if (originalProps && typeof originalProps === \"object\" && source && String(type) !== \"Symbol(react.fragment)\") {\n      props = {\n        ...originalProps,\n        \"data-react-source\": `${source.fileName}:${source.lineNumber}:${source.columnNumber}`\n      };\n    }\n  } catch {\n  }\n  return jsxDEV$1(type, props, key, isStatic, source, self);\n};\n\nexport { jsxDEV };\n"],"names":[],"mappings":";;;AAAA;;;;AAIA,yBAAyB;AACzB,IAAI,SAAS,CAAC,MAAM,eAAe,KAAK,UAAU,QAAQ;IACxD,IAAI,QAAQ;IACZ,IAAI;QACF,IAAI,iBAAiB,OAAO,kBAAkB,YAAY,UAAU,OAAO,UAAU,0BAA0B;YAC7G,QAAQ;gBACN,GAAG,aAAa;gBAChB,qBAAqB,GAAG,OAAO,QAAQ,CAAC,CAAC,EAAE,OAAO,UAAU,CAAC,CAAC,EAAE,OAAO,YAAY,EAAE;YACvF;QACF;IACF,EAAE,OAAM,CACR;IACA,OAAO,CAAA,GAAA,8NAAA,CAAA,SAAQ,AAAD,EAAE,MAAM,OAAO,KAAK,UAAU,QAAQ;AACtD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}